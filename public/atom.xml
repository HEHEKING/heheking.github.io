<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>肥宅馆</title>
  
  <subtitle>我就是力量的化身。</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-01T08:40:34.374Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>鲸某人 | heheking</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker 部署 hexo</title>
    <link href="http://example.com/2020/11/01/docker%20%E9%83%A8%E7%BD%B2%20hexo/"/>
    <id>http://example.com/2020/11/01/docker%20%E9%83%A8%E7%BD%B2%20hexo/</id>
    <published>2020-11-01T07:20:19.873Z</published>
    <updated>2020-11-01T08:40:34.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-部署-hexo"><a href="#Docker-部署-hexo" class="headerlink" title="Docker 部署 hexo"></a>Docker 部署 hexo</h1><h2 id="方法一、使用-spurin-hexo-架设-hexo"><a href="#方法一、使用-spurin-hexo-架设-hexo" class="headerlink" title="方法一、使用 spurin/hexo 架设 hexo"></a>方法一、使用 spurin/hexo 架设 hexo</h2><p>spurin/hexo 是至2020年中保持更新的一个 hexo 的 docker 镜像，一键部署，比较方便</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker create --name&#x3D;hexo \</span><br><span class="line">-e HEXO_SERVER_PORT&#x3D;4000 \</span><br><span class="line">-e GIT_USER&#x3D;&quot;HEHEKING&quot; \</span><br><span class="line">-e GIT_EMAIL&#x3D;&quot;2351965997@qq.com&quot; \</span><br><span class="line">-v &#x2F;root&#x2F;blog&#x2F;otaku-home:&#x2F;app \</span><br><span class="line">-p 4000:4000 \</span><br><span class="line">spurin&#x2F;hexo</span><br></pre></td></tr></table></figure><p>详细步骤可参考<a href="https://www.dazhuanlan.com/2019/12/30/5e09d1bfb22d7/">https://www.dazhuanlan.com/2019/12/30/5e09d1bfb22d7/</a></p><h2 id="方法二、使用-zeusro-hexo-架设-hexo"><a href="#方法二、使用-zeusro-hexo-架设-hexo" class="headerlink" title="方法二、使用 zeusro/hexo 架设 hexo"></a>方法二、使用 zeusro/hexo 架设 hexo</h2><p>zeusro/hexo 是不再维护的 hexo 一键部署镜像，因为没有必要。他部署 hexo 只需要一个 <strong>公开 PUBLIC</strong> 的 github 连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name hexo -d -p 4000:4000 zeusro&#x2F;hexo:latest  --env PUBLIC_HEXO_GITHUB_URL&#x3D;https:&#x2F;&#x2F;github.com&#x2F;HEHEKING&#x2F;otaku-home.git </span><br></pre></td></tr></table></figure><h2 id="方法三、从-Centos7-镜像从零部署"><a href="#方法三、从-Centos7-镜像从零部署" class="headerlink" title="方法三、从 Centos7 镜像从零部署"></a>方法三、从 Centos7 镜像从零部署</h2><p>这个办法我估摸着就和 hexo 部署教程<strong>一模一样</strong>了几乎。好像没有使用 docker 的必要？</p><p>但 docker 对于一部分强迫症患者症状减轻真的很有效。</p><h3 id="1-初始化容器"><a href="#1-初始化容器" class="headerlink" title="1. 初始化容器"></a>1. 初始化容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> run 一个 name 为 hexo 的 centos7，并挂载4000端口，同时也可以使用 -v 挂载一下之后会使用到的目录</span></span><br><span class="line">docker run  --name hexo -it -p 4000:4000 -v /root/hexo:/root/otaku-home centos:7 /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在之后可以使用这个命令回到该容器</span></span><br><span class="line">docker exec -it hexo /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装基础库</span></span><br><span class="line">yum -y install git gcc gcc-c++ curl wget</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：对 docker 还不够熟悉的话，可以先看完整篇文章，再一步步动手操作，这里的挂载目录部分可能会引发<strong>误解</strong></p><h3 id="2-安装nodejs14"><a href="#2-安装nodejs14" class="headerlink" title="2. 安装nodejs14"></a>2. 安装nodejs14</h3><p>对于 nodejs 来说，版本自然是越高越好。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建安装目录</span></span><br><span class="line">mkdir nodejs</span><br><span class="line">cd nodejs</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载node</span></span><br><span class="line">wget https://npm.taobao.org/mirrors/node/latest-v14.x/node-v14.2.0-linux-x64.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压缩</span></span><br><span class="line">tar zxvf node-v14.2.0-linux-x64.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建快捷方式</span></span><br><span class="line">ln -s /usr/local/nodejs/node-v14.2.0-linux-x64/bin/npm /usr/local/bin/</span><br><span class="line">ln -s /usr/local/nodejs/node-v14.2.0-linux-x64/bin/node /usr/local/bin/</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检测 node 和 npm 的版本</span></span><br><span class="line">node -v</span><br><span class="line">v14.2.0</span><br><span class="line">npm -v</span><br><span class="line">6.14.4</span><br></pre></td></tr></table></figure><p>值得一提的是，这种安装方式，如果没有配置 /etc/profile，全局安装是失效的，事实上局部安装也是无法访问的，因此我建议每建立一个 npm 项目，都<strong>更新</strong>一次环境变量</p><h3 id="3-npm-单次换源"><a href="#3-npm-单次换源" class="headerlink" title="3. npm 单次换源"></a>3. npm 单次换源</h3><p>换个淘宝源，防止之后使用 npm 时进行不必要的等待，这一行为是仅作用于这一次会话的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：<code>pwd</code> 命令可以帮助我们获取当前路径，这在接下来的步骤中可能有所帮助</p><h3 id="4-安装-hexo（初次接触-hexo）"><a href="#4-安装-hexo（初次接触-hexo）" class="headerlink" title="4. 安装 hexo（初次接触 hexo）"></a>4. 安装 hexo（初次接触 hexo）</h3><p>如果我们是<strong>初次建立</strong>hexo blog，应该是没有 hexo 代码仓库的，那么这里可以直接如官方文档操作。如果已经有 hexo.git 的可以直接跳到<strong>第5步</strong></p><p><strong>PS</strong>：这里 hexo 的实际部署位置为：/root/npm/hexo，那么之前初始化 docker 挂载的时候，也应该是使用这个目录。如：**-v hexo:/root/hexo:/root/npm/hexo**</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd /root/npm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地安装 hexo</span></span><br><span class="line">npm install hexo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 hexo 服务器</span></span><br><span class="line">npm install hexo-server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里使用 <span class="built_in">echo</span> 命令，将该目录下的 npm 库 加入环境变量</span></span><br><span class="line">echo &#x27;export PATH=$PATH:/root/npm/node_modules/.bin&#x27; &gt;&gt; /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者我们也可以使用 vi 直接编辑它</span></span><br><span class="line">vi /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新环境变量</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>到这一步，我们就可以开始架设 hexo 了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 建立 hexo</span></span><br><span class="line">mkdir hexo</span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo 初始化,注意在进行 hexo 初始化的时候，必须有目标文件夹，且目标文件夹必须为空。</span></span><br><span class="line">hexo init ./hexo</span><br></pre></td></tr></table></figure><p>这时，它会从官方的代码仓库克隆一份原始模板。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编译 hexo</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 hexo 服务器</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>至此，一个 hexo 服务器已被架设在本机的 4000 端口。</p><h3 id="5-通过-git-部署-hexo"><a href="#5-通过-git-部署-hexo" class="headerlink" title="5. 通过 git 部署 hexo"></a>5. 通过 git 部署 hexo</h3><p>在第一步中，我们 -v 挂载的目录，在这里就是 hexo 的实际目录</p><p><strong>PS</strong>：在这里，我们需要注意，github的代码仓库，clone下来时，是一个目录，如：<strong>HEHEKING/otaku-home</strong> 仓库，使用 git clone 后会在该目录创建一个 otaku-home 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入目录</span></span><br><span class="line">cd /root</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 克隆仓库，如果该仓库是私密的，需要输入 github 的账户密码进行验证。</span></span><br><span class="line">git clone https://github.com/HEHEKING/otaku-home.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入目录</span></span><br><span class="line">cd ./otaku-home</span><br><span class="line"><span class="meta">#</span><span class="bash"> npm 依赖更新，npm 会下载项目中缺失的依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这时，我们依然需要更新一下环境变量，但是要注意目录</span></span><br><span class="line">echo &#x27;export PATH=$PATH:/root/otaku-home/node_modules/.bin&#x27; &gt;&gt; /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新环境变量</span></span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始部署</span></span><br><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>至此，将 git 上的 hexo 仓库部署到 docker 已完毕。</p><p>这里，我们使用 ctrl + P + Q 可以退出当前 docker 容器，回到主容器</p><p>当我们 docker attach hexo 时，会发现看似卡了，实际上没有问题，因为 hexo server 不再打印日志了，ctrl + C 退出即可。</p><p><strong>PS</strong>：配合 docker commit 保存容器为镜像会方便日后使用</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>前两种方式的镜像资源会小很多。</p><p>我使用了第三种。直接 git 部署，还没测试过 hexo init 那块教程</p><p>如果有问题，亲自调试吧<em>(:з」∠)</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker-部署-hexo&quot;&gt;&lt;a href=&quot;#Docker-部署-hexo&quot; class=&quot;headerlink&quot; title=&quot;Docker 部署 hexo&quot;&gt;&lt;/a&gt;Docker 部署 hexo&lt;/h1&gt;&lt;h2 id=&quot;方法一、使用-spurin-hex</summary>
      
    
    
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/31/hello-world/"/>
    <id>http://example.com/2020/10/31/hello-world/</id>
    <published>2020-10-31T12:50:53.466Z</published>
    <updated>2020-09-01T16:16:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
